@using miniZeiterfassung.Models.DTO;
@model OutputResponseDTO;

@{
    ViewData["Title"] = "Time Tracking Overview";
}

<h2>Time Tracking Overview</h2>

<form asp-action="Index" method="post">
    <div class="form-group">
        <label for="employeeName">Employee Name:</label>
        <select id="employeeName" name="employeeId" class="form-control">
            @foreach (var employee in Model.Employees)
            {
                <option value="@employee.EmployeeId">@employee.Name</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label for="fromDate">From Date:</label>
        <input type="date" id="fromDate" name="fromDate" class="form-control" />
    </div>
    <div class="form-group">
        <label for="toDate">To Date:</label>
        <input type="date" id="toDate" name="toDate" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary mt-2">Generate Report</button>
</form>

@if (Model.Records.Any())
{
    <div class="d-flex justify-content-evenly mb-4 mt-lg-5">
        <div>
            <span class="fw-bold">Personnel No.:</span>
            <span>@Model.Records.FirstOrDefault()?.Employee?.EmployeeNumber</span>
        </div>
        <div>
            <span class="fw-bold">Name:</span>
            <span>@Model.Records.FirstOrDefault()?.Employee?.Name</span>
        </div>
        <div>
            <span class="fw-bold">Starting Balance:</span>
            <span>@Model.Records.FirstOrDefault()?.Employee?.StartingBalance</span>
        </div>
    </div>

    <table class="table table-striped mt-4">
        <thead>
            <tr>
                <th>Date</th>
                <th>From Time</th>
                <th>To Time</th>
                <th>Target Hours</th>
                <th>Working Hours</th>
                <th>Working Hours/Day</th>
                <th>Day Balance</th>
                <th>Total Balance</th>
            </tr>
        </thead>
        <tbody>
            @{
                var totalBalance = Model.Records.FirstOrDefault()?.Employee?.StartingBalance ?? 0;
                var totalTargetHours = 0.0;
                var totalWorkingHoursSum = 0.0;
                var totalDailyBalance = 0.0;
            }
            @foreach (var group in Model.Records.GroupBy(r => r.Date))
            {
                var totalWorkingHours = group.Sum(r => (r.ToTime - r.FromTime).TotalHours);
                var targetHours = group.First().Employee.TimeModel.TargetHours;
                var dailyBalance = totalWorkingHours - targetHours;

                totalBalance += (decimal)dailyBalance;
                totalTargetHours += targetHours;
                totalWorkingHoursSum += totalWorkingHours;
                totalDailyBalance += (double)dailyBalance;

                foreach (var record in group)
                {
                    <tr>
                        @if (record == group.First())
                        {
                            <td rowspan="@group.Count()">@record.Date.ToString("yyyy-MM-dd")</td>
                        }
                        <td>@record.FromTime.ToString(@"hh\:mm")</td>
                        <td>@record.ToTime.ToString(@"hh\:mm")</td>
                        @if (record == group.Last())
                        {
                            <td>@Html.DisplayFor(modelItem => record.Employee.TimeModel.TargetHours)</td>
                        }
                        else
                        {
                            <td></td>
                        }
                        <td>@((record.ToTime - record.FromTime).TotalHours.ToString("F2"))</td>
                        @if (record == group.Last())
                        {
                            <td>@totalWorkingHours.ToString("F2")</td>
                        }
                        else
                        {
                            <td></td>
                        }
                        @if (record == group.Last())
                        {
                            <td>@dailyBalance.ToString("F2")</td>
                        }
                        else
                        {
                            <td></td>
                        }
                        @if (record == group.Last())
                        {
                            <td>@totalBalance.ToString("F2")</td> @* rowspan = "@group.Count()" *@
                        }
                        else
                        {
                            <td></td>
                        }
                    </tr>
                }
            }
            <tr class="fw-bold">
                <td colspan="3">Total</td>
                <td>@totalTargetHours.ToString("F2")</td>
                <td>@totalWorkingHoursSum.ToString("F2")</td>
                <td>@totalWorkingHoursSum.ToString("F2")</td>
                <td>@totalDailyBalance.ToString("F2")</td>
                <td>@totalBalance.ToString("F2")</td>
            </tr>
        </tbody>
    </table>

}
